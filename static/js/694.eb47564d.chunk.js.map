{"version":3,"file":"static/js/694.eb47564d.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__O5pFz\"};","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n  \n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status)\n  }, [props.status])\n\n  //console.log(props.status === status);\n\n  let activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  let deActivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  let onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  return (\n    <div>\n      {!editMode &&\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\n        </div>\n      }\n      {editMode &&\n        <div>\n          <input autoFocus={true} onBlur={deActivateEditMode} value={status} onChange={onStatusChange}></input>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport anonim from '../../../assets/images/anonim.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src=\"https://avatars.mds.yandex.net/i?id=e1a099650a60f0432e5d44110ff215c6af1ae58f-5284123-images-thumbs&ref=rim&n=33&w=224&h=150\" alt=\"\" />\r\n      </div> */}\r\n      <div className={style.descriptionBlock}>\r\n        <img src={props.profile.photos.large != undefined\r\n          ? props.profile.photos.large\r\n          : anonim \r\n        } width={220} alt=\"Ава димыча\" />\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <div>{props.profile.aboutMe}</div>\r\n        <div>Мой facebook: {props.profile.contacts.facebook}</div>\r\n        <div>Мой vk: {props.profile.contacts.vk}</div>\r\n        <div>Мой instagram: {props.profile.contacts.instagram}</div>\r\n        <div>Мой twitter: {props.profile.contacts.twitter}</div>\r\n        <div>Рабочий статус: {props.profile.lookingForAJob ? <img src='https://avatars.mds.yandex.net/i?id=6424603e2f8cb2712a52b1c17aafb6d2c28667f9-5221301-images-thumbs&n=13' width={250}></img> : <img src='https://i.pinimg.com/originals/f2/c0/42/f2c04254774f4c818bfc7a9ce49847a0.jpg' width={250}></img>}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__8OkDP\",\"posts\":\"MyPosts_posts__UU3j-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__V5wcv\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n\r\n  return (\r\n    <div className={style.item}>\r\n      <img src=\"https://avatars.mds.yandex.net/i?id=212dc039abbe9d590d1d86156e3011eb789a83e6-5210205-images-thumbs&ref=rim&n=33&w=188&h=150\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map(item =>\r\n    <Post key={item.id} likesCount={item.likesCount} message={item.message} />)\r\n  \r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n  \r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>my post</h3>\r\n      <div>\r\n        <MyPostsReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet maxLength10 = maxLengthCreator(10) // валидатор на колличество символов в постах\r\n\r\nconst AddNewPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder={'Добавь пост'} name={'newPostText'} component={Textarea}\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: 'newPostText' })(AddNewPostsForm)\r\n\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n    };\r\n    \r\n    this.props.getUserProfile(userId); // Запрос профиля с информацией\r\n    this.props.getStatus(userId); // Запрос статуса\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer); //ХОК создающий контейнер для компонента\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nAuthRedirectComponent = connect(mapStateToPropsForRedirect) (AuthRedirectComponent) \r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        params={params}\r\n      />\r\n    )\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n} \r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n","import { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => { // HOC does container for auth\n  class RedirectComponent extends React.Component {\n    render() {\n      if (this.props.isAuth == false) {return <Navigate to='/login' />}\n      return <Component {...this.props}/>\n    }\n  }\n\n  let mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  });\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectedAuthRedirectComponent;\n}\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","profile","className","style","src","undefined","photos","large","anonim","width","alt","ProfileStatusWithHooks","aboutMe","contacts","facebook","vk","instagram","twitter","lookingForAJob","Preloader","message","likesCount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","postsElements","_toConsumableArray","posts","reverse","map","item","Post","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","params","autorizedUserId","getUserProfile","getStatus","Profile","_objectSpread","React","AuthRedirectComponent","withAuthRedirect","isAuth","auth","compose","Component","useParams","RedirectComponent","Navigate","to"],"sourceRoot":""}