{"version":3,"file":"static/js/672.1f374e77.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__a18-E\",\"dialogsItems\":\"Dialogs_dialogsItems__dveW7\",\"dialog\":\"Dialogs_dialog__9fBbX\",\"active\":\"Dialogs_active__FBkRp\",\"messages\":\"Dialogs_messages__AmgXZ\",\"message\":\"Dialogs_message__Xds-S\"};","import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css';\r\n\r\nfunction DialogItem(props) {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  const className = useLocation().pathname === path ? style.active : style.dialog;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n  return <div className={style.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Textarea} from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nfunction Dialogs(props) {\r\n  let AddNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  let dialogsElements = props.dialogsPage.dialogs.map(item => <DialogItem key={item.id} name={item.name} id={item.id} />)\r\n  let messagesElements = props.dialogsPage.messages.map(item => <Message key={item.id} message={item.message} id={item.id} />)\r\n\r\n  if (props.isAuth == false) { return <Navigate to='/login' /> }\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.messages} >\r\n        {messagesElements}\r\n        <AddMessageReduxForm onSubmit={AddNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxlength10 = maxLengthCreator(10)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name='newMessageBody' component={Textarea} placeholder='Сообщение...'\r\n        validate={[required, maxlength10]} />\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => { // Передаем в функцию коннект диспатчи с экшенами\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n} \r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n","import { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => { // HOC does container for auth\n  class RedirectComponent extends React.Component {\n    render() {\n      if (this.props.isAuth == false) {return <Navigate to='/login' />}\n      return <Component {...this.props}/>\n    }\n  }\n\n  let mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  });\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectedAuthRedirectComponent;\n}\n"],"names":["props","path","id","className","useLocation","pathname","style","_jsx","children","NavLink","to","name","message","maxlength10","maxLengthCreator","AddMessageReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogsPage","dialogs","map","item","DialogItem","messagesElements","messages","Message","isAuth","Navigate","values","sendMessage","newMessageBody","compose","withAuthRedirect","connect","state","dispatch","sendMessageCreator","Dialogs","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React","auth"],"sourceRoot":""}